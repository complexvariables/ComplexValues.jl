var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [ComplexValues]\nOrder = [:type, :function]","category":"page"},{"location":"api/#ComplexValues.Polar-Tuple{Number}","page":"API","title":"ComplexValues.Polar","text":"Polar(z)\n\nConstruct a polar representation of z.\n\n\n\n\n\n","category":"method"},{"location":"api/#ComplexValues.Polar-Tuple{Real, Real}","page":"API","title":"ComplexValues.Polar","text":"Polar(radius::Real, azimuth::Real)\n\nConstruct a polar value with the given radius and angle.\n\n\n\n\n\n","category":"method"},{"location":"api/#ComplexValues.Spherical-Tuple{Number}","page":"API","title":"ComplexValues.Spherical","text":"Spherical(z)\n\nConstruct a spherical representation of the value z.\n\n\n\n\n\n","category":"method"},{"location":"api/#ComplexValues.Spherical-Tuple{Real, Real}","page":"API","title":"ComplexValues.Spherical","text":"Spherical(latitude, azimuth)\n\nConstruct a spherical representation with given latitude in [-π/2,π/2] and azimuth.\n\n\n\n\n\n","category":"method"},{"location":"api/#ComplexValues.S2coord-Tuple{Spherical}","page":"API","title":"ComplexValues.S2coord","text":"S2coord(u::Spherical)\n\nConvert the spherical value to a 3-vector of coordinates on the unit sphere.\n\n\n\n\n\n","category":"method"},{"location":"api/#ComplexValues.real_type-Union{Tuple{Complex{T}}, Tuple{T}} where T","page":"API","title":"ComplexValues.real_type","text":"real_type(z)\n\nReturn the base type of a real or complex float z, i.e., the type of its real part.\n\nExamples\n\njulia> real_type(1.0)\nFloat64\njulia> real_type(1.0f0 + 2im)\nFloat32\njulia> real_type(Polar(BigFloat(1), 2))\nBigFloat\n\n\n\n\n\n","category":"method"},{"location":"spherical/#Spherical","page":"Spherical","title":"Spherical","text":"","category":"section"},{"location":"spherical/","page":"Spherical","title":"Spherical","text":"A Spherical value stores the latitude and azimuthal angles. For efficiency, the angles are not converted to any standard interval, though some operations on values do so. They can be accessed directly as the lat and lon (for longitude) fields.","category":"page"},{"location":"spherical/","page":"Spherical","title":"Spherical","text":"Multiplicative inverse (inv) and sign of Spherical values exploit the structure of the representation. Otherwise, most operations are done by first converting to Complex.","category":"page"},{"location":"spherical/","page":"Spherical","title":"Spherical","text":"The comparators iszero, isinf, isfinite, and isapprox are defined appropriately.","category":"page"},{"location":"polar/#Polar","page":"Polar","title":"Polar","text":"","category":"section"},{"location":"polar/","page":"Polar","title":"Polar","text":"A Polar value stores the complex modulus and azimuthal angle. For efficiency, the angle is not converted to any standard interval, though some operations on values do so. They can be accessed directly as mod and ang fields.","category":"page"},{"location":"polar/","page":"Polar","title":"Polar","text":"Multiplication, division, abs, abs2, and sign of Polar values exploit the structure of the representation and should be more efficient than for native complex equivalents. Otherwise, most operations are done by first converting to Complex.","category":"page"},{"location":"polar/","page":"Polar","title":"Polar","text":"The comparators iszero, isinf, isfinite, and isapprox are defined appropriately.","category":"page"},{"location":"#ComplexValues","page":"Overview","title":"ComplexValues","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"This package provides two additional types for representing complex values in Julia: a Polar type for representation in polar coordinates, and a Spherical type for representation on the Riemann sphere. ","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Prior to version 0.3, this package also provided some facility for making plots on the Riemann sphere. That capability (plus much more) now lies in the ComplexPlots package.","category":"page"},{"location":"#Usage-notes","page":"Overview","title":"Usage notes","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Either of the two new types can be converted to a built-in complex floating number via Complex.\nPromotion of any number along with a Spherical value results in Spherical. \nPromotion of any built-in number type with a Polar results in Polar. \nStandard unary and binary functions in Base are extended to work with the new types. \nThe type AnyComplex{T<:AbstractFloat} is defined (but not exported) as the union of the built-in Complex{T} together with Polar{T} and Spherical{T}.\nThe real_type function is defined to return the real type of a Complex, Polar or Spherical value.","category":"page"},{"location":"#Examples","page":"Overview","title":"Examples","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"using ComplexValues\nPolar(1im)\nPolar.(exp.(1im*LinRange(0,2π,6)))\nSpherical(Inf)","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"A Spherical value can be converted to a 3-vector of coordinates on the unit sphere S^2.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Spherical(0)\nS2coord(ans)","category":"page"}]
}
